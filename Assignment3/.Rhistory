ggplot(aes(x = variable, y = value, color = inout)) +
geom_path(aes(group=1)) + geom_point() +  coord_flip() +
labs(x="", y = "", title = "In-/Out-Strength") + theme_bw()
# plot in-/out-strength
inoutStrength %>%
ggplot(aes(x = variable, y = value, color = inout)) +
geom_path(aes(color=inout)) + geom_point() +  coord_flip() +
labs(x="", y = "", title = "In-/Out-Strength") + theme_bw()
#options(warn = -1)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
comment = NA,
fig.align = "center")
# load libraries
library("mlVAR")
library("graphicalVAR")
library("psychonetrics")
library("dplyr")
library("qgraph")
library(purrr)
library(ggpubr)
# set the seed for reproducibility
set.seed(123)
# compute in-/out-strength
inoutStrength <- temp %>% centrality_auto() %>%
.$node.centrality %>%
select(InStrength, OutStrength)
library(ggplot2)
# plot in-/out-strength
p1 <- inoutStrength %>%
ggplot(aes(y = OutStrength, x=reorder(rownames(.), OutStrength))) +
geom_line(aes(group=1)) + geom_point() +  coord_flip() +
labs(x="", y = "", title = "Out-Strength") + theme_bw()
p2 <- inoutStrength %>%
ggplot(aes(y = InStrength, x=reorder(rownames(.), OutStrength))) +
geom_line(aes(group=1)) + geom_point() + coord_flip()+
labs(x="", y = "", title = "In-Strength") + theme_bw()
ggpubr::ggarrange(p1, p2)
#options(warn = -1)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
comment = NA,
fig.align = "center")
# load libraries
library("mlVAR")
library("graphicalVAR")
library("psychonetrics")
library("dplyr")
library("qgraph")
library(purrr)
library(ggpubr)
library(ggplot2)
# set the seed for reproducibility
set.seed(123)
# plot in-/out-strength
p1 <- inoutStrength %>%
ggplot(aes(y = OutStrength, x=reorder(rownames(.), OutStrength))) +
geom_line(aes(group=1)) + geom_point() +  coord_flip() +
labs(x="", y = "", title = "Out-Strength") + ylim(0, 0.3) theme_bw()
# plot in-/out-strength
p1 <- inoutStrength %>%
ggplot(aes(y = OutStrength, x=reorder(rownames(.), OutStrength))) +
geom_line(aes(group=1)) + geom_point() +  coord_flip() +
labs(x="", y = "", title = "Out-Strength") + ylim(0, 0.3)+ theme_bw()
p2 <- inoutStrength %>%
ggplot(aes(y = InStrength, x=reorder(rownames(.), OutStrength))) +
geom_line(aes(group=1)) + geom_point() + coord_flip()+
labs(x="", y = "", title = "In-Strength") + ylim(0, 0.3)+ theme_bw()
ggarrange(p1, p2)
# plot in-/out-strength
p1 <- inoutStrength %>%
ggplot(aes(y = OutStrength, x=reorder(rownames(.), OutStrength))) +
geom_line(aes(group=1)) + geom_point() +  coord_flip() +
labs(x="", y = "", title = "Out-Strength") + ylim(0.05, 0.26)+ theme_bw()
p2 <- inoutStrength %>%
ggplot(aes(y = InStrength, x=reorder(rownames(.), OutStrength))) +
geom_line(aes(group=1)) + geom_point() + coord_flip()+
labs(x="", y = "", title = "In-Strength") + ylim(0.05, 0.26)+ theme_bw()
ggarrange(p1, p2)
# plot in-/out-strength
p1 <- inoutStrength %>%
ggplot(aes(y = OutStrength, x=reorder(rownames(.), OutStrength))) +
geom_line(aes(group=1)) + geom_point() +  coord_flip() +
labs(x="", y = "", title = "Out-Strength") + ylim(0.1, 0.26)+ theme_bw()
p2 <- inoutStrength %>%
ggplot(aes(y = InStrength, x=reorder(rownames(.), OutStrength))) +
geom_line(aes(group=1)) + geom_point() + coord_flip()+
labs(x="", y = "", title = "In-Strength") + ylim(0.05, 0.26)+ theme_bw()
ggarrange(p1, p2)
?addTrans
??addTrans
qgraph(tem_inddif, layout = L, labels = chosen_var2, theme='colorblind', vsize = 12, asize = 4, mar = rep(7,4), title = "(a) Temporal", minimum = 0.095) # we set the minimum 0.07 to make the network a bit sparse
qgraph(tem_inddif, layout = L, labels = chosen_var2, theme='colorblind', vsize = 12, asize = 4, mar = rep(7,4), title = "(a) Temporal", minimum = 0.01) # we set the minimum 0.07 to make the network a bit sparse
qgraph(tem_inddif, layout = L, labels = chosen_var2, theme='colorblind', vsize = 12, asize = 4, mar = rep(7,4), title = "(a) Temporal", minimum = 0.09) # we set the minimum 0.07 to make the network a bit sparse
qgraph(tem_inddif, layout = L, labels = chosen_var2, theme='colorblind', vsize = 12, asize = 4, mar = rep(7,4), title = "(a) Temporal", minimum = 0.1) # we set the minimum 0.07 to make the network a bit sparse
## contemporaneous: random effects SD
contemp_ran_sd <- mlVAR_res[["results"]][["Theta"]][["pcor"]][["SD"]]
qgraph(tem_inddif, layout = L, labels = chosen_var2, theme='colorblind', vsize = 12, asize = 4, mar = rep(7,4), title = "(a) Temporal", minimum = 0.1) # we set the minimum 0.07 to make the network a bit sparse
## temporal: random effects SD
temp_ran_sd <- mlVAR_res[["results"]][["Beta"]][["SD"]] # mlVAR_res$results$Beta$SD
tem_inddif <- cbind(rep(1:5,each=5), rep(1:5,5), weight=as.vector(temp_ran_sd))
qgraph(tem_inddif, layout = L, labels = chosen_var2, theme='colorblind', vsize = 12, asize = 4, mar = rep(7,4), title = "(a) Temporal", minimum = 0.1, details=T) # we set the minimum 0.07 to make the network a bit sparse
## contemporaneous: random effects SD
contemp_ran_sd <- mlVAR_res[["results"]][["Theta"]][["pcor"]][["SD"]]
qgraph(contemp_ran_sd, layout = L, labels = chosen_var2, theme='colorblind', vsize = 12, asize = 4, mar = rep(7,4), title = "(b) Contemporaneous", details=T)
t
t
t
qgraph(tem_inddif, layout = L, labels = chosen_var2, theme='colorblind', vsize = 12, asize = 4, mar = rep(7,4), title = "(a) Temporal", minimum = 0.1, details=T) # we set the minimum 0.07 to make the network a bit sparse
?graphicalVAR
?plot.graphicalVAR
plot(res2, "PCC", layout = L1, main = "Contemporaneous", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs)
plot(res2, "PDC", layout = L1, main = "Temporal", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs)
?graphicalVar
?graphicalVAR
options(warn = -1)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
comment = NA,
fig.align = "center")
# load libraries
library("mlVAR")
library("graphicalVAR")
library("psychonetrics")
library("dplyr")
library("qgraph")
library(purrr)
library(ggpubr)
library(ggplot2)
# set the seed for reproducibility
set.seed(123)
# Detrending significant linear trends:
for (v in seq_along(chosen_var)){
ff <- as.formula(paste0(Vars[[v]]," ~ time"))
fit <- lm(ff, data = Data)
if (anova(fit)$P[1] < 0.05){
message(paste("Detrending variable",v))
Data[[Vars[v]]][!is.na(Data[[Vars[[v]]]])] <- residuals(fit)
}
}
ff <- as.formula(paste0(Vars[[v]]," ~ conc"))
# Detrending significant linear trends:
for (v in seq_along(chosen_var)){
ff <- as.formula(paste0(Vars[[v]]," ~ conc"))
fit <- lm(ff, data = Data)
if (anova(fit)$P[1] < 0.05){
message(paste("Detrending variable",v))
Data[[Vars[v]]][!is.na(Data[[Vars[[v]]]])] <- residuals(fit)
}
}
# Detrending significant linear trends:
for (v in seq_along(chosen_var)){
ff <- as.formula(paste0(Vars[[v]]," ~ conc"))
fit <- lm(ff, data = my_data)
if (anova(fit)$P[1] < 0.05){
message(paste("Detrending variable",v))
Data[[Vars[v]]][!is.na(Data[[Vars[[v]]]])] <- residuals(fit)
}
}
# Detrending significant linear trends:
for (v in seq_along(chosen_var)){
ff <- as.formula(paste0(chosen_var[[v]]," ~ conc"))
fit <- lm(ff, data = my_data)
if (anova(fit)$P[1] < 0.05){
message(paste("Detrending variable",v))
Data[[Vars[v]]][!is.na(Data[[Vars[[v]]]])] <- residuals(fit)
}
}
# Detrending significant linear trends:
for (v in seq_along(chosen_var)){
ff <- as.formula(paste0(chosen_var[[v]]," ~ conc"))
fit <- lm(ff, data = my_data)
if (anova(fit)$P[1] < 0.05){
message(paste("Detrending variable",v))
Data[[Vars[v]]][!is.na(Data[[Vars[[v]]]])] <- residuals(fit)
}
}
ff <- as.formula(paste0(chosen_var[[v]]," ~ conc"))
# Detrending significant linear trends:
for (v in seq_along(chosen_var)){
ff <- as.formula(paste0(chosen_var[[v]]," ~ conc"))
fit <- lm(ff, data = my_data)
if (anova(fit)$P[1] < 0.05){
message(paste("Detrending variable",v))
my_data[[chosen_var[v]]][!is.na(my_data[[chosen_var[[v]]]])] <- residuals(fit)
}
}
seq_along(chosen_var)
t(2:2
matrix(1:4, 2, 2)
matrix(1:4, 2, 2)
t(matrix(1:4, 2, 2))
View(my_data)
View(my_data2)
plot(res5, "PCC", layout = L1, main = "Contemporaneous (id=33)", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme = "colorblind", details=T)
# subject from Q8 (id = 68)
plot(res2, "PDC", layout = L1, main = "Temporal (id=68)", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme="colorblind",details=T, titles=FALSE)
# subject from Q8 (id = 68)
plot(res2, "PDC", layout = L1, main = "Temporal (id=68)", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme="colorblind",details=T, maximum=1)
## Another seed: select another random subject
set.seed(13294889)
subject2 <- sample(Data2$id, 1)
my_data2 <- Data2[which(Data2$id == subject2),]
## Estimate GVAR model for another subject
res5 <- graphicalVAR(my_data2, vars = chosen_var, gamma = 0)
### LAYOUT the same fix!
## plot networks and compare
layout(t(matrix(1:4, 2, 2)))
# subject from Q8 (id = 68)
plot(res2, "PDC", layout = L1, main = "Temporal (id=68)", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme="colorblind",details=T)
title(mmain = "Temporal (id=68)")
plot(res2, "PCC", layout = L1, main = "Contemporaneous (id=68)", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme = "colorblind",details=T)
# another subject (id = 33)
plot(res5, "PDC", layout = L1, main = "Temporal (id=33)", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme="colorblind",details=T)
plot(res5, "PCC", layout = L1, main = "Contemporaneous (id=33)", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme = "colorblind", details=T)
# subject from Q8 (id = 68)
qgraph(res2, "PDC", layout = L1, main = "Temporal (id=68)", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme="colorblind",details=T)
?title
title(main = "Temporal (subject id=68)", cex.main = 1)
?gvar
sig_pars <- res1 %>% parameters() %>%
filter(par >= 19, par <=40) %>%
select(var1, op,var2, est, se, p) %>%
filter(p < 0.05)
sig_pars
## estimate GVAR model
res1 <- gvar(my_data, vars = chosen_var, dayvar = "day", beepvar = "beep", estimator="FIML") %>% runmodel
sig_pars <- res1 %>% parameters() %>%
filter(par >= 19, par <=40) %>%
select(var1, op,var2, est, se, p) %>%
filter(p < 0.05)
sig_pars
View(my_data)
?plot.mlVAR
?mlvar
?mlVAR
View(Data)
View(Data2)
?bootnet
??bootnet
library(bootnet)
boots_casedrop <- bootnet(mlVAR_res, nBoots = 3000, nCores = 8, type = "case", statistics = c("outStrength", "inStrength"))
# Estimate model:
gvar <- estimateNetwork(
Data2, default = "graphicalVAR", vars = chosen_var2,
tuning = 0, dayvar = "day", beepvar = "beep", nLambda = 8
)
Layout <- qgraph::averageLayout(gvar$graph$temporal,
gvar$graph$contemporaneous)
layout(t(1:2))
plot(gvar, graph = "temporal", layout = Layout,
title = "Temporal")
plot(gvar, graph = "temporal", layout = Layout,
title = "Temporal")
plot(gvar, graph = "contemporaneous", layout = Layout,
title = "Contemporaneous")
boots <- bootnet(gvar, statistics = c("inStrength", "outStrength"),
nBoots = 1000, nCores = 8, type = "case")
?bootnet
boots <- bootnet(gvar, statistics = c("outStrength", "inStrength"), nBoots = 1000, nCores = 8, type = "case")
boots <- bootnet(gvar, statistics = c("outStrength", "inStrength"), nBoots = 10, nCores = 8, type = "case")
View(Data2)
rm(list=ls())
options(warn = -1)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
comment = NA,
fig.align = "center")
# load libraries
library("mlVAR")
library("graphicalVAR")
library("psychonetrics")
library("dplyr")
library("qgraph")
library(purrr)
library(ggpubr)
library(ggplot2)
# set the seed for reproducibility
set.seed(123)
# load data
load("clean_network.RData")
# Variables to investigate:
vars <- paste0("Q",1:18)
# Labels:
varLabs <- c("Relax","Irritable","Worry","Nervous","Future","Anhedonia",
"Tired","Hungry","Alone","Angry","Social_offline","Social_online",
"Music","Procrastinate","Outdoors","C19_occupied","C19_worry",
"Home")
# Rename columns in data:
names(Data2)[names(Data2) %in% vars] <- varLabs
# Remove items:
Data2 <- Data2 %>% select(-Hungry,-Angry,-Music,-Procrastinate)
varLabs <- varLabs[!varLabs %in% c("Hungry","Angry","Music","Procrastinate")]
## select a random participant
student_number <- 12183881
set.seed(student_number)
subject <- sample(Data2$id, 1)
my_data_copy <- my_data <- Data2[which(Data2$id == subject),]
View(my_data)
seq_along(chosen_var)
chosen_var <- c("Irritable", "Worry", "Nervous", "Alone")
seq_along(chosen_var)
chosen_var
?gvar
## Another seed: select another random subject
set.seed(13294889)
subject2 <- sample(Data2$id, 1)
my_data2 <- Data2[which(Data2$id == subject2),]
## Estimate GVAR model for another subject
res5 <- graphicalVAR(my_data2, vars = chosen_var, gamma = 0, dayvar = "day", beepvar = "beep")
## plot networks and compare
layout(t(matrix(1:4, 2, 2)))
# subject from Q8 (id = 68)
plot(res2, "PDC", layout = L1, vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme="colorblind", details=T, titles=FALSE)
options(warn = -1)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
comment = NA,
fig.align = "center")
# load libraries
library("mlVAR")
library("graphicalVAR")
library("psychonetrics")
library("dplyr")
library("qgraph")
library(purrr)
library(ggpubr)
library(ggplot2)
# set the seed for reproducibility
set.seed(123)
# load data
load("clean_network.RData")
# Variables to investigate:
vars <- paste0("Q",1:18)
# Labels:
varLabs <- c("Relax","Irritable","Worry","Nervous","Future","Anhedonia",
"Tired","Hungry","Alone","Angry","Social_offline","Social_online",
"Music","Procrastinate","Outdoors","C19_occupied","C19_worry",
"Home")
# Rename columns in data:
names(Data2)[names(Data2) %in% vars] <- varLabs
# Remove items:
Data2 <- Data2 %>% select(-Hungry,-Angry,-Music,-Procrastinate)
varLabs <- varLabs[!varLabs %in% c("Hungry","Angry","Music","Procrastinate")]
## select a random participant
student_number <- 12183881
set.seed(student_number)
subject <- sample(Data2$id, 1)
my_data_copy <- my_data <- Data2[which(Data2$id == subject),]
chosen_var <- c("Irritable", "Worry", "Nervous", "Alone")
## estimate GVAR model
res1 <- gvar(my_data, vars = chosen_var, dayvar = "day", beepvar = "beep", estimator="FIML") %>% runmodel
## temporal network
temporal1 <- getmatrix(res1, "PDC") # PDC = Partial Directed Correlations
## contemporaneous network
contemporaneous1 <- getmatrix(res1, "omega_zeta")
## get average layout
L1 <- averageLayout(temporal1, contemporaneous1)
## get labels
labs <- chosen_var
## plot networks
layout(t(1:2))
qgraph(temporal1, layout = L1, theme = "colorblind", directed=TRUE, diag=TRUE,
title = "Temporal", vsize = 12, mar = rep(6,4), asize = 5, labels = labs)
qgraph(contemporaneous1, layout = L1, theme = "colorblind",
title = "Contemporaneous", vsize = 12, mar = rep(6,4), asize = 5, labels = labs)
# get parameters
res1 %>% parameters()
# sig_pars <- res1 %>% parameters() %>%
#   filter(par >= 19, par <=40) %>%
#   select(var1, op,var2, est, se, p) %>%
#   filter(p < 0.05)
# sig_pars
## estimate GVAR model using graphicalVAR
res2 <- graphicalVAR(my_data, vars = chosen_var, gamma = 0, dayvar = "day", beepvar = "beep")
## plot networks
layout(t(1:2))
plot(res2, "PDC", layout = L1, main = "Temporal", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme="colorblind")
plot(res2, "PCC", layout = L1, main = "Contemporaneous", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme = "colorblind")
## run linear regression on chosen variables
lms <- chosen_var %>%
paste(., '~ conc') %>%
map(as.formula) %>%
map(lm, data = my_data_copy)
names(lms) <- chosen_var
## get the summary results
lapply(lms, summary)
## Detrending significant linear trends
for (v in seq_along(chosen_var)){
ff <- as.formula(paste0(chosen_var[[v]]," ~ conc"))
fit <- lm(ff, data = my_data)
# find significant coefficient of "conc"
if (anova(fit)$P[1] < 0.05){
message(paste("Detrending variable:", chosen_var[v], "as the p-value is", round(anova(fit)$P[1],3)))
# detrend the found variables with significant linear trends
my_data[[chosen_var[v]]][!is.na(my_data[[chosen_var[[v]]]])] <- residuals(fit)
}
}
## after detrending, estimate GVAR model using psychonetrics:
res3 <- gvar(my_data, vars = chosen_var, dayvar = "day", beepvar = "beep", estimator="FIML") %>% runmodel
# temporal network
temporal3 <- getmatrix(res3, "PDC")
# contemporaneous network
contemporaneous3 <- getmatrix(res3, "omega_zeta")
## after detrending, estimate GVAR model using graphicalVAR:
res4 <- graphicalVAR(my_data, vars = chosen_var, gamma = 0, dayvar = "day", beepvar = "beep")
## plot networks after detrending
layout(t(matrix(1:4, 2, 2)))
# psychonetrics GVAR networks
qgraph(temporal3, layout = L1, theme = "colorblind", directed=TRUE, diag=TRUE,
vsize = 12, mar = rep(6,4), asize = 5, labels = labs)
title(main = "Detrended Temporal (psychonetrics)", font.main = 1, cex.main=1)
qgraph(contemporaneous3, layout = L1, theme = "colorblind", vsize = 12,
mar = rep(6,4), asize = 5, labels = labs)
title(main = "Detrended Contemporaneous (psychonetrics)", font.main = 1, cex.main=1)
# graphicalVAR networks
plot(res4, "PDC", layout = L1, main = "Temporal", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme="colorblind", titles = FALSE)
title(main = "Detrended Temporal (graphicalVAR)", font.main = 1, cex.main=1)
plot(res4, "PCC", layout = L1, main = "Contemporaneous", vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme = "colorblind", titles=FALSE)
title(main = "Detrended Contemporaneous (graphicalVAR)", font.main = 1, cex.main=1)
## Another seed: select another random subject
set.seed(13294889)
subject2 <- sample(Data2$id, 1)
my_data2 <- Data2[which(Data2$id == subject2),]
## Estimate GVAR model for another subject
res5 <- graphicalVAR(my_data2, vars = chosen_var, gamma = 0, dayvar = "day", beepvar = "beep")
## plot networks and compare
layout(t(matrix(1:4, 2, 2)))
# subject from Q8 (id = 68)
plot(res2, "PDC", layout = L1, vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme="colorblind", details=T, titles=FALSE)
title(main = "Temporal (subject id=68)", cex.main = 1, font.main = 1)
plot(res2, "PCC", layout = L1, vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme = "colorblind",details=T, titles=FALSE)
title(main = "Contemporaneous (subject id=68)", cex.main = 1, font.main = 1)
# another subject (id = 33)
plot(res5, "PDC", layout = L1, vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme="colorblind",details=T, titles=FALSE)
title(main = "Temporal (subject id=33)", cex.main = 1, font.main = 1)
plot(res5, "PCC", layout = L1, vsize = 12, mar = rep(6,4), asize = 5,
labels = labs, theme = "colorblind", details=T, titles=FALSE)
title("Contemporaneous (subject id=33)", cex.main = 1, font.main = 1)
Max <- max(res2$PCC, res2$PDC, res5$PCC, res5$PDC)
Max
?mlvar
?mlVAR
?graphihcalVAR
?graphicalVAR
## choose 5 variables
chosen_var2 <- c("Irritable", "Worry", "Nervous", "Alone", "C19_worry")
## estimate mlGVAR model
mlVAR_res <- mlVAR(Data2, vars = chosen_var2, idvar = "id" , beepvar = "beep",
dayvar = "day", contemporaneous = "correlated", temporal = "correlated")
# Get networks:
temp <- getNet(mlVAR_res, "temporal", nonsig = "hide")
cont <- getNet(mlVAR_res, "contemporaneous", nonsig = "hide", rule = "and")
bet  <- getNet(mlVAR_res, "between", nonsig = "hide", rule = "and")
# Get average layout
L <- averageLayout(cont,bet,temp)
## Plot networks
par(mfrow=c(1,3))
plot(mlVAR_res, "temporal", title="(a) Temporal (Lag-1)", layout = L, nonsig = "hide",
alpha = 0.05, theme='colorblind', vsize = 16, asize = 5,
mar = rep(7,4), title.cex = 1.3)
plot(mlVAR_res, "contemporaneous", title="(b) Contemporaneous", layout = L, nonsig = "hide",
alpha = 0.05, rule = "and", theme='colorblind', vsize = 16,  asize = 5,
mar = rep(7,4), title.cex = 1.3)
plot(mlVAR_res, "between", title="(c) Between-subjects", layout = L, nonsig = "hide",
alpha = 0.05, rule = "and", theme='colorblind', vsize = 16, asize = 5,
mar = rep(7,4), title.cex = 1.3)
?plot.mlVAR
View(mlVAR_res)
contemporaneous1
## get maximum edge weights from both networks
Max1 <- maximum(temporal1, contemporaneous1)
## get maximum edge weights from both networks
Max1 <- max(temporal1, contemporaneous1)
## get maximum edge weights from both networks
Max1 <- max(temporal1, contemporaneous1)
Max2 <- max(res2$PCC, res2$PDC)
Max2
Max1
max(temporal3,contemporaneous3)
max(res4$PCC, res4$PDC)
max(res4$PCC, res4$PDC)
max(temporal3,contemporaneous3)
max(temporal3,contemporaneous3)
max(temporal3,contemporaneous3)
max(temporal3,contemporaneous3)
max(res4$PCC, res4$PDC)
max(temporal3,contemporaneous3) # check the max edge weight
max(res4$PCC, res4$PDC) # check the max edge weight
